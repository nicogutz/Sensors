
SENSORS AND ACTUATORS
Session 5.2
Designing Feedback Controllers for Motor Drives
Maria Torres Vega
Faculty of Engineering Technology
1
Where are we?
Week Session Date Content Chpt.
W5 5.1 25/10 Synchronous (PMAC) Drives, and asynchronous (Induction) Motors Ac. 10, 11 A
5.2 27/10 Designing Feedback Controllers for Motor Drives Ac. 8 C
W7 7.1 08/11 General Introduction to sensors Se. 1
7.2 10/11 Displacement sensors 1: Potentiometers & Strain Gages Se. 2A,B
W8 8.1 15/11 Displacement sensors 2: Inductive Se. 2B
8.2 17/11 Displacement sensors 3: Capacitive, piezo, optical and Hall Se. 2B
S
W9 9.1 22/11 Velocity sensors, acceleration sensors and MEMS Se.
2C,2D,2E E
9.2 24/11 Force and Torque sensors Se. 3 N
S
W10 10.1 29/11 Pressure Sensors Se. 4
O
10.2 01/12 Flow Sensors Se. 5 R
W11 11.1 06/12 Temperature Sensors Se. 6 S
11.2 08/12 Exam exercises
W12 13/12 Exam exercises
2
2
Today’s session is about …
Sensor
P P
elec mech Movement
Control Electrical Electrical Mechanical
System System Machine/Motor System
(Actuator)
Session 5.2 (Ac. 8):
• Feedback controlled drive
• Open Loop and Closed Loop
• Plant modelling
• Controller modelling
• Example of controller design for Torque, Speed and Position
3
3
Feedback controlled drive
We can control:
• Torque
• Speed
• Position
4
First, let’s have a look at the general scheme.
What does it look like?
The motor is the electric machine, we have the mechanical load (we need to
take it into account, the inertia for instance).
To drive the motor we will need the PPU or power processing unit. Then, the
output of the system is the desired factor to control.
There needs to be sensors to measure these. The idea is to measure the
obtained signal and compare it to the desired value reference. In most of the
cases this is done by software, we have a sensor connected to a
microcontroller and they are calculated.
Thus, it is what you get what you wanted? There could be an error between
the two, and this is the information we need to use at the controller. In this
figure, the controller is called error amplifier, because it will be with some
amplification. This will be in most of the cases P or PI controllers. For
motors, typically we will not see PID controllers as the derivative component
is not needed.
The controller then makes some calculations and inputs the value to the
PPU.
What can we actually control? The torque or the speed or the position
4
Cascade control structure
5
We have just said that the purpose of the controller could be to control the
torque, the speed and the position of the system.
What would happen if we want to control all three at the same time?
In that case, we need to design three controllers (torque, speed, and
position).
There is actually a desired position for each of the controllers within the
modelling chain.
The position controller will be defining the desired speed, where the speed
controller will be defining your desired torque.
Why is the torque controller in the most inner loop and the speed controller is
a bit more to the outer loop?
As we will learn, the torque is the first thing we can control, the speed follows
from the torque and from there the position.
There is one important thing: as we have three controllers, we will have three
systems. Each of these has its own characteristics.
It is important to remember that the inner loop needs to be the fastest (the
highest bandwidth). Thus, the torque loop is the fastest, the speed loop is a
bit slower and the position loop is the slowest. It is usually a number of
magnitude difference in term of bandwidths (500, 50, 5).
Why? This is to have an stable system. Suppose that your torque controller
is very slow: The desired torque changes take a while until they get set.
Suppose that the speed controller acts faster. In this case, then it will over-
react. It will very quickly ask for more torque but the desired torque is not
there yet, so the speed controller will have a huge difference between input
and output, and it will ask for more torque.
When the torque controller finally reacts, it will provide too much torque to
the mechanical system making it too fast. This will provoke the speed
5
controller to try to slow down, and by the time the torque controller gets
low, we will get oscillations in the system.
5
Cascade control structure
 Torque loop : fastest
 Speed loop : slower
 Position loop : slowest
6
We have just said that the purpose of the controller could be to control the
torque, the speed and the position of the system.
What would happen if we want to control all three at the same time?
In that case, we need to design three controllers (torque, speed, and
position).
There is actually a desired position for each of the controllers within the
modelling chain.
The position controller will be defining the desired speed, where the speed
controller will be defining your desired torque.
Why is the torque controller in the most inner loop and the speed controller is
a bit more to the outer loop?
As we will learn, the torque is the first thing we can control, the speed follows
from the torque and from there the position.
There is one important thing: as we have three controllers, we will have three
systems. Each of these has its own characteristics.
It is important to remember that the inner loop needs to be the fastest (the
highest bandwidth). Thus, the torque loop is the fastest, the speed loop is a
bit slower and the position loop is the slowest. It is usually a number of
magnitude difference in term of bandwidths (500, 50, 5).
Why? This is to have an stable system. Suppose that your torque controller
is very slow: The desired torque changes take a while until they get set.
Suppose that the speed controller acts faster. In this case, then it will over-
react. It will very quickly ask for more torque but the desired torque is not
there yet, so the speed controller will have a huge difference between input
and output, and it will ask for more torque.
When the torque controller finally reacts, it will provide too much torque to
the mechanical system making it too fast. This will provoke the speed
6
controller to try to slow down, and by the time the torque controller gets
low, we will get oscillations in the system.
6
Simplified control system representation
Open Loop? 𝐺 (𝑠) = 𝐺 (𝑠)𝐺 (𝑠) 1. Accuracy
(cid:3016)(cid:3013) (cid:3030) (cid:3043)
2. Speed
𝐺 (𝑠)
(cid:3016)(cid:3013)
Close Loop? 𝐺 (𝑠) =
(cid:3004)(cid:3013) 3. Stability
1+ 𝐺 (𝑠)
(cid:3016)(cid:3013)
7
Now, how do we approach the modelling of the system to define the
appropriate components for the controller?
We use mathematical models. We will need a mathematical model for the
plant (PPU-motor-mechanical load, i.e., the equipment to be controlled) and
for the controller Gc. For both, we will derive a transfer function, as you can
see, in the Laplace domain. For instance, we will have a transfer function
between the obtained speed, position, or torque to the input (voltage and
current from the PPU). Typically, these are polynomial on S (same as in
Systems and Control Theory).
Moreover, we need a mathematical model for the controller with a transfer
function relating the input or error and the output or information going to the
PPU. Thus, we have what we want X* and what we get X and the difference
that goes through the system. Let´s refresh a bit the content of control
systems:
First, the open loop gain of the system is the transfer function if there were
no feedback. If we take away the feedback loop (unity gain feedback loop),
the relation of X* and X is Gc times Gp.
Secondly, we have the close loop gain, which is the open loop gain divided
by 1 + OL gain.
Mathematical demonstration of the Close loop (G = G)
OL
X(s) = E(s)G
E(s) = X*(s) –X(s)
X(s) = G(X*(s) –X(s))
GX* = X(s) + GX(s)
X(s)/X*(s) = G/(1 + G)
Now, we will see that in the controller there are some degrees of freedom
and that the decision of which parameter to optimize depends on fixed
7
criteria.
In motor controllers there are 3 fixed criteria: accuracy, speed, and
stability.
First, accuracy means that what you get is as close as possible to what
you wanted.
Second, we want speed, we do not want to wait too long. Thus, we
want the motor to respond fast to changes.
Third, stability, this means that if your input is constant, your output is
also constant.
Let´s see what we mean with these criteria next
7
Phase Margin, Bandwidth and the 3 criteria
Accuracy= Flat response CL
Speed = Bandwidth
𝐺 (𝑠)
(cid:3016)(cid:3013)
𝐺 𝑠 =
Stability= Phasemargin > 0 (45°-60°) (cid:3004)(cid:3013) 1+𝐺 (𝑠)
(cid:3016)(cid:3013)
8
This is a Bode plot of the open loop. On top we have the amplitude/gain
response, on the bottom we have the phase response and on the x axis we
have the frequency. The scales are logarithmic (dB on the y axis and
frequency on the x axis and the phase is of course in degrees).
This is a typical open loop response: we have a very large gain for low
frequencies (up to 80 dB) and the gain slowly decreases as the frequency
increases. This is a very normal behavior for an open loop system in the
physical world.
One frequency that is very important is the unity gain frequency. The
frequency at which your gain is 0dB. That means that there is no
amplification.
In the bottom plot we see a typical phase response which starts at 90
degrees (first order system). Then it decreases, it goes close to the -180
degrees line and up again. In the same way as with the amplitude, an
important value is the phase margin. The phase margin is the difference
between your phase and the 180-degree line at the unity gain frequency.
Thus, we would first look for the unity gain frequency and from there, derive
the phase margin.
Why is the phase margin important? It is important for the third criterium,
stability. In order to have an stable controller, we want a phase margin that is
positive and large enough. In this case, large enough is 45 degrees where
60 degrees is even better. If it is smaller, the system might become unstable
(oscillation). If it is zero then it becomes very unstable where your negative
feedback becomes positive.
For the two other criteria, we need to look at the close loop response. At very
low frequencies we have very high OL gain, which means it is much higher
than 1. In such case, the CL gain is 1 (0dB). That is why we have the flat
8
response. Why is this important? It is important for the first criterium:
accuracy. What you get is what you want. This is what we want, a flat
response at 0 dBs.At higher frequencies, the OL gain becomes
negative, so it is an attenuation. In such cases, the G OL becomes
negative and much smaller that 1. Thus, for the high frequencies we
can ignore the denominator G OL and it means that GCL is equal to G
OL, which is very verysmall. Thus, if we have a decline in the open
loop gain, we will see the same decline in the close loop one. With this,
we can see the concept of bandwidth, which is the frequency region in
which the response is flat (typical low pass behavior in motors). Why is
bandwidth important? Because we want a fast controller (criterium 1). A
fast controller is a controller with a high bandwidth.
8
Gain magnitude and step response
9
Here we have an example of a first order system, where the open loop gain
has a linear response and the close loop gain has a flat response until the
unity gain frequency where it transforms to a first order (or 3dB frequency)
or bandwidth. From this close loop response, we can calculate the step
response ( c ), where the X* is your desired value and the X has an
exponential behavior until reaching it. Here we can also see the time
constant tau. If we have a very small time constant we have a very high
bandwidth. Thing that are big in the frequency are small in the time domain.
9
Plant (Process) representation
10
Once we know the general concepts about the open and close loops, we can
start analyzing the different system components in detail. First, let’s talk
about the plant. We need to make a mathematical model for the PPU and
the motor.
10
Average representation of the PPU
11
First, we can model the PPU.
Here we see something you might remember from the previous lectures.
We have the capacitor for the input power supply and the two power pole
switches (a and b) that provide input voltage to the motor. As we have
already talked about, the PPU is also controlled by a control signal that
“controls” the PWM (thus, the average input voltage).
The PPU can be modelled in a very simple manner as it acts as an amplifier
where the input voltage is this v control (the voltage controlling the PWM)
and the output is the Vaor V0 which is the input to the motor. It should be
noted that by this modelling we are only representing the DC components
and the lower frequencies of the signals, making sure that we are very far
away from the switching frequency of the transistors. As such we can model
the system also as a transformer (as we have also seen in the previous
lectures).
11
DC and motor load model design
𝑉 (𝑠)
(cid:3028)
𝑣̄ (𝑡)= 𝑒 (𝑡)+𝑅 𝚤̄ (𝑡)+𝐿
𝑑𝚤̄ (cid:3028)(𝑡) 𝑉 (cid:3028)(𝑠)= 𝐸 (cid:3028)(𝑠)+𝑅 (cid:3028)𝐼
(cid:3028)
(𝑠)+𝐿 (cid:3028)𝑠𝐼 (cid:3028)(𝑠) +
-
𝐸 (cid:3028)(𝑠)
(cid:3028) (cid:3028) (cid:3028) (cid:3028) (cid:3028) 𝑑𝑡 𝑉 𝑠 − 𝐸 (𝑠)
(cid:3028) (cid:3028)
𝐼 (𝑠) =
(cid:3028) 𝑅 +𝑠𝐿
(cid:3028) (cid:3028)
𝑒 (𝑡)= 𝑘 ω (𝑡) 𝐸 (𝑠) = 𝑘 ω (𝑠) 1
(cid:3028) (cid:3006) (cid:3040) (cid:3028) (cid:3006) (cid:3040)
𝑅 +𝑠𝐿
(cid:3028) (cid:3028)
𝑇 (cid:3032)(cid:3040)(𝑡)= 𝑘 (cid:3021)𝑖(cid:3365)
(cid:3028)
(𝑡) 𝑇 (cid:3032)(cid:3040)(𝑠) = 𝑘 (cid:3021)𝐼 (cid:3028)(𝑠) 𝐼 (cid:3028)(𝑠)
𝑘 𝑘
𝑑 𝑇 𝑡 −𝑇 (𝑡) 𝑇 (cid:3032)(cid:3040) 𝑠 −𝑇 (cid:3013)(𝑠) (cid:3021) (cid:3006)
(cid:3032)(cid:3040) (cid:3013) ω (𝑠) =
𝑑𝑡ω (cid:3040)(𝑡)= 𝐽
(cid:3032)(cid:3044)
(cid:3040) 𝑠𝐽 (cid:3032)(cid:3044) 𝑇 (cid:3013)(𝑠)-+ 𝑇 (cid:3032)(cid:3040)(𝑠) ω (cid:3040)(𝑠)
1
𝑠𝐽
(cid:3032)(cid:3044)
ω (𝑠)
(cid:3040)
12
Now let’s go to the modelling of the motor!
We have on the one side the model of the motor, with the internal resistor
related to the number of windings, the inductor due to the leakage and the
back-emf. The back-emf is connected to the load. Through the back-emf we
get the angular velocity omega, and through the current we get the torque.
Finally, the load will have certain inertia that needs to be countered. The
purpose here is to transform the model into the Laplace domain.
The first question that comes to mind is what are actually the input and
output of the system?
As input we have the Va(s) which is the output of the PPU as we just saw.
As the motor converts voltage into movement, the output of the system will
be the omega m or angular velocity.
Now, how do we convert from input voltage to angular velocity? Let’s take a
look at the equations that we know from the previous lectures.
First, we have the circuit analysis. Keep in mind that we are only interested
on the dc average values. The ACs are ignored.
Second, we have the formula of the back-emf, which relates the voltage and
the angular velocity.
Third, we have the torque equation, relating to the current.
Finally, we have the relation between the acceleration, the torques and the
inertias.
To be able to transform into the s-domain, we need to transform each of
these equations.
Let’s start by the first one. This is very straightforward only with the
particularity that the time domain derivative becomes a multiplication by s in
Laplace. Now we can see that Vais the input and Iais the current (our
output), we can reshape the formula a bit so that Iais equal to the Va-Ea
divided by the resistor and s times the inductor. This can be directly put into
12
the model. As we can see, we will also need the representation of the
back-emf. For it, we can take the second equation and also transform it
to the Laplace domain. This one is even simpler as the transform it is
just straightforward kw(s).
Let’s continue, we have current, and we need to get to speed. We know
the relation between the current and the torque is again with the
machine constant, where the transform is just a linear transform (what
is linear in time stays linear in the laplacedomain).
Finally, we can relate the angular speed to the torque. We can
transform the remaining equation into the laplacedomain, where again
the derivative is a multiplication by s. As such, omega is torque divided
by s times the inertia.
So, this is the model for the motor. You should be able to know what
each of the components does and how they behave together.
12
Controller model design – Proportional Integral
𝑉(𝑠) 𝑘 𝑘 𝑠
=𝑘 𝐸(𝑠) (cid:3030) =𝑘 + (cid:3036) = (cid:3036) 1+
(cid:3043) 𝐸 (𝑠) (cid:3043) 𝑠 𝑠 𝑘
(cid:3036)(cid:3416)
𝑘
(cid:3043)
=
𝑘
(cid:3036)
𝐸(𝑠)
𝑠
13
Now we have the plant, we can talk about the controller model.
The good news here is that we do not need to design but more to select
something, which in this case is a PI controller.
Briefly, we have the feedback loop that subtracts the obtained x from the
desired x and we get an error E.
Two things happen to this error. It is first multiplied by a constant which is the
proportional part. Later on, we will need to find a good value for that number
kp. If we were only to have the proportional component, we would always
have a steady state error. That is why we also calculate the integral of that
error signal (dividing by s means integrating). We divide by s and we multiply
by ki (a scalar), which we will also need to find the value to. Thus, we have
the two values, the proportional and the integrated values, and the sum of
them gives us the control signal. Quick question: how do you integrate a
signal? Integrating a signal just means adding your samples. So, how do we
model the PI controller?
With this formula: Vc/E is equal to the proportional part plus the derivative
one. It can be rewritten in this following way to allow us to simplify the
systems later. Now, how do we choose good values for kpand ki? By
approximation from the feedback loop.
13
Example of a controller Design
• Permanent magnet dc-motor
• Switch-mode PWM dc-dc
• We will design:
• Torque
• Speed
• Position
14
Let’s try to make the analysis very concrete. In the book there is an example
and we are going to follow it. In this example we are going to calculate for a
permanent magnet dc motor, we will design the three controllers: torque,
speed and position.
In the exam, there won’t be a lot of calculations of this part, we will rather ask
for you to be able to provide interpretations of plots and models.
14
Torque (current) modelling
15
As we said before, the torque is the fastest of the control loops and
therefore, it is the inner one. how can we model it?
15
Torque (current) analysis and simplification
Neglect
𝐿
(cid:3028)
τ =
(cid:3032) 𝑅 𝑇
(cid:3028) (cid:3013)
𝐼 (cid:3028)∗(𝑠 +) ∑ PI 𝑉 (cid:3030)(𝑠) 𝑘 (cid:3017)(cid:3024)(cid:3014) 𝑉 (cid:3028)( +𝑠) ∑ 11 +⁄𝑅 𝑠(cid:3028) τ
(cid:3032)
𝐼 (cid:3028)(𝑠) 𝑘 (cid:3021) 𝑇 (cid:3032)(cid:3040) +- ∑ 𝑠𝐽1
(cid:3032)(cid:3044)
𝑤 (cid:3040)
- -
𝐸 (𝑠)
(cid:3028)
𝐼 (𝑠)
(cid:3028) 𝑘
(cid:3006)
𝑘 𝑘
(cid:3021) (cid:3006)
𝐸 𝑠 = 𝐼 (s)
(cid:3028) 𝑠𝐽 (cid:3028)
(cid:3032)(cid:3044)
𝐼 (cid:3028)∗(𝑠 +) ∑ PI 𝑉 (cid:3030)(𝑠) 𝑘 (cid:3017)(cid:3024)(cid:3014) 𝑉 (cid:3028)( +𝑠) ∑ 11 +⁄𝑅 𝑠(cid:3028) τ
(cid:3032)
𝐼 (cid:3028)(𝑠) 𝑘 (cid:3021) 𝑇 (cid:3032)(cid:3040) 𝑠𝐽1
(cid:3032)(cid:3044)
𝑤 (cid:3040)
- -
𝐸 (𝑠)
(cid:3028)
𝐼 (cid:3028)(𝑠) 𝑘 (cid:3021)𝑘 (cid:3006)
𝑠𝐽
(cid:3032)(cid:3044)
16
First, we start from motor and the PPU models that we have defined just
some slides ago. This is the PWM for the PPU, and the different components
of the motor. For convention and to help the simplification we can define tau
e as the electrical time constant (the inductance divided by the resistance).
As such, the relation between the current and input voltage stays as in the
figure. As just explained the PPU is represented by kpwmand as introduced,
for the torque/current loop we will use a PI controller, with connection to the
current as the desired torque or current.
As this is a highly complicated model, we will want to simplify it as much as
possible.
First simplification that can be done is to assume TL as zero. This is not fully
realistic but for the calculation of kpand ki it works. Therefore, we can design
for a zero load torque and often, with the same settings it can be used for a
non-zero load torque. If the TL is zero, then we can actually calculate the
back-emf from the current and calculate it directly.
16
Torque (current) analysis and simplification (2)
𝐼 (cid:3028)∗(𝑠 +) ∑ PI 𝑉 (cid:3030)(𝑠) 𝑘 (cid:3017)(cid:3024)(cid:3014) 𝑉 (cid:3028)( +𝑠) ∑ 11 +⁄𝑅 𝑠(cid:3028) τ
(cid:3032)
𝐼 (cid:3028)(𝑠) 𝑘 (cid:3021) 𝑇 (cid:3032)(cid:3040) 𝑠𝐽1
(cid:3032)(cid:3044)
𝑤 (cid:3040)
- -
𝐽 ≫0 𝑏𝑜𝑜𝑘
𝑘 𝑘 (cid:3032)(cid:3044)
𝐼 (𝑠) (cid:3021) (cid:3006)
(cid:3028) You design for zero
𝑠𝐽
(cid:3032)(cid:3044) speed (real reason)
𝐼∗(𝑠) 𝑉(𝑠)
(cid:3028) ∑ 𝑘 (cid:3036)(cid:3010) (1+ 𝑠 ) 𝑘 (cid:3028) 1⁄𝑅 (cid:3028) 𝐼 (cid:3028)(𝑠)
+ 𝑠 𝑘 (cid:3036)(cid:3010)⁄𝑘 (cid:3043)(cid:3010) (cid:3017)(cid:3024)(cid:3014) 1+𝑠τ (cid:3032)
-
𝑘 𝑠 1⁄𝑅
𝐼 (𝑠) 𝐺 𝑠 = (cid:3036)(cid:3010) 1+ 𝑘 (cid:3028)
(cid:3028) (cid:3010),(cid:3016)(cid:3013) 𝑠 𝑘 (cid:3036)(cid:3010)⁄𝑘 (cid:3043)(cid:3010) (cid:3017)(cid:3024)(cid:3014) 1+ 𝑠
1⁄τ
(cid:3032)
PI-controller PPU Motor
17
From here it is also possible to ignore the back-emf. In the book, the
explanation given is that the inertia is very big and it can be ignored. This is
not completely correct. The real reason is that we design the controllers for
zero speed, which means that there is no velocity (no back-emf). Then,
these can be used for non-zero situations.
With this, our model becomes very simple with the PI, the PPU and the
motor. We have a unity gain feedback, where a sensor is used to measure
the current (this is done by means of a small resistor). We subtract this to the
desired current, calculating the error. We integrate the error by means of the
PI controller. Thus, this is the whole system, which has become simpler.
We have here the transfer function of the controller and the transfer function
for the plant. This means we have our open loop gain. But we can actually
simplify further.
17
Torque (current) analysis and simplifications (3)
𝑘 𝑠 1⁄𝑅
(cid:3036)(cid:3010) (cid:3028)
𝐺 𝑠 = 1+ 𝑘
(cid:3010),(cid:3016)(cid:3013) 𝑠 𝑘 (cid:3036)(cid:3010)⁄𝑘 (cid:3043)(cid:3010) (cid:3017)(cid:3024)(cid:3014) 1+ 𝑠
1⁄τ
(cid:3032)
k
pI
If we choose  e (i.e., the zero of the PI controller to cancel the motor pole)
k
iI
𝐺 𝑠 =
(cid:3038)(cid:3284),(cid:3264)(cid:3261)
where 𝑘 =
(cid:3038)(cid:3284)(cid:3258)(cid:3038)(cid:3265)(cid:3272)(cid:3262)
(cid:3010),(cid:3016)(cid:3013) (cid:3010),(cid:3016)(cid:3013)
(cid:3046) (cid:3019)(cid:3276)
18
We have 1 + s divided by something in the controller (a zero) and in the
motor we have a pole (transfer function infinite). A very simple trick is called
pole zero compensation: if we chose the values so that the controller
nominator (1 + s) equals the denominator part of the motor, we can make the
terms disappear. We can do this by choosing kpI/kiI= tau e. We can then
simplify further as shown here. Now, if we look at the frequency response of
this transfer function, what does it look like?
18
Torque (current) loop with a crossover frequency of 1KHz
1. Accuracy ?
2. Speed ?
3. Stability ?
19
As we have a first order function, we have a linear decay with 20dB per
decade. The phase is 1/w meaning that is always -90 degrees.
We should be able to see the relation between the previous formula and this
figure. How does this affect in accuracy, speed and stability?
First, what can we see in the OL gain? KiI is the frequency we can choose.
We see that we have a unity gain of 1000 Hz. This means we will have
chosen a kiOLof 2000pi. We can actually choose the value of our crossover
frequency to accomplish accuracy, speed and stability. We will want to
choose a high value as it directly relates to the bandwidth. Should it be very
high, like 1MHz? No, because we want to be able to be far enough from the
PWM switching frequency or the controller will respond to that frequency and
we need to avoid that. Thus, we will like to chose a value which is high
enough as to accomplish the speed/accuracy and stability but far enough
from the switching frequency. To sum up for this system:
Accuracy is very good, because we have a zero dBs response (what you
want is what you get)
Speed is also ok –1KHz
And is it stable, yes, because the phase is 90 degrees.
19
Speed modelling
20
Now, let’s move on to the speed controller
20
Speed analysis and simplifications
Speed bandwidth 1 order of magnitude smaller than the torque
1 Close-current loop is ideal and 1
ω (cid:3040)∗ (𝑠) 𝐼 (cid:3028)∗(𝑠) Current 𝐼 (cid:3028)(𝑠) 𝑇 (cid:3032)(cid:3040)(s) 1 ω (cid:3040)(𝑠)
PI close loop 𝑘
(cid:3021) 𝑠𝐽
(torque) (cid:3032)(cid:3044)
𝑘 𝑘
𝐺 = (cid:3036)(cid:2960) 1+ 𝑠⁄ 𝑘 ⁄𝑘 1 (cid:3021) 𝑘 𝑘 1+ 𝑠⁄(𝑘 ⁄𝑘 )
(cid:2960),(cid:3016)(cid:3013) 𝑠 (cid:3036)(cid:2960) (cid:3043)(cid:2960) 𝑠𝐽 (cid:3032)(cid:3044) 𝐺 (cid:2960),(cid:3016)(cid:3013) =( (cid:3036) 𝐽(cid:2960) (cid:3021) ) 𝑠(cid:2870)(cid:3036)(cid:2960) (cid:3043)(cid:2960)
(cid:3032)(cid:3044)
PI Current Torque +
controller loop inertia
21
Now we have desired speed omega and the obtained speed omega.
In the controller we again have the PI controller where the input is the error
signal of the subtraction of what we want minus what we get. Then, as the
output of the PI controller we will have the desired current. What we have
after is the current loop (the torque loop from the previous slides). Then the
transformation of the torque and finally the inertia.
The current loop can be simplified a lot to just account to 1 as we assume
here that the designed controller is in the flat response for sufficient below
frequencies.
This means that the bandwidth of this speed loop is significantly smaller (1
order of magnitude) than the current-torque loop. 1 is the simplest model that
we can have. With all these values, the OL gain in speed is equal to this
equation, which can be simplified as shown to the left. How would the bode
plot look like of this?
• In the nominator we have 1+s divided by something. This means that for
low frequencies you only need to look at the 1.
• In the denominator, we have s2 which means that we cannot ignore it.
• Thus, for low frequencies we have 1 in the nominator, s2 in the
denominator and it is multiplied by a constant (which shifts the curve up
and down). S2 means we have a second order system which starts at
zero hertzs. It means a 40 dB slope per decade.
• However, as the frequency increases, the effect of the s of the nominator
starts to weight and we can ignore the 1. This means we have an s in the
nominator, an s2 in the denominator and we get a first order system (1/s).
21
Speed loop with crossover frequency 100 Hz
1. Accuracy ?
2. Speed ?
3. Stability ?
22
This is exactly what we see here. For the lower frequencies we have a
second order response 40dB decay decade, 180-degree phase shift. From
the crossover frequency, here chosen as 100Hz, we have a first order
system 20 dB/decade and a phase shift of 90 degrees. This is important as it
will affect the stability.
Now we can look at the close loop response. Is it accurate? Yes, because we
have a unitary response for a big range of frequencies. Is it fast? Yes,
because we have a bandwidth of 100 Hz, is it stable? Yes, because at the
crossover frequency, we have a phase margin of around 60 degrees.
22
Position modelling
23
Now, one more system to go, the position loop.
23
Position analysis
Position BW 1 order of magnitude smaller than speed
Speed loop = 1
ω∗ (𝑠) ω (𝑠)
θ (cid:3040)∗ (𝑠) (cid:3040) (cid:3040) 1 θ (cid:3040)(𝑠)
𝑘 1
(cid:2968) 𝑠
𝑘
(cid:2968)
𝐺 =
(cid:2968),(cid:3016)(cid:3013) 𝑠
24
This loop is used mostly in robotics, not really used in cars for instance. We
have the desired position (angular) and the obtained position. They are used
to obtain the error like in previous cases. For the position we do not do the
integration part but only the multiplication by a constant. The reason is that
there is already some integration part at the end of the loop (integral of the
omega equals position). Again, we assume that the speed loop works as the
unity transformation assuming that the bandwidth of the position is 1 order of
magnitude smaller than the one of the speed. Thus the desired speed is
equal to the obtained speed.
24
Position loop assuming crossover frequency 10 Hz
25
This means that the bode plots are very simple with a first order system and
a phase margin of 90 degrees so accurate, stable and in terms of speed,
well it is not as fast as the others but fast enough. The most important of all
these analysis is that you know how to interpret the bode plots and to
understand the relations and what happens if we change the different values
of ki and kp.
25
Any questions?
26
26